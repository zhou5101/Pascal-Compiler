opToken = {
    '+': 'TK_ADD',
    '-': 'TK_MINUS',
    '*': 'TK_MULTIPLY',
    '/': 'TK_DIVIDE',
    '=': 'TK_EQUAL',
    ':=': 'TK_ASSIGN',
    '<': 'TK_LESS_THAN',
    '>': 'TK_GREATER_THAN',
    '<>': 'TK_NOT_EQUAL',
    '<=': 'TK_LESS_THAN_EQUAL',
    '>=': 'TK_GREATER_THAN_EQUAL',
    ':': 'TK_COLON',
    ';': 'TK_SEMI_COLON',
    '(': 'TK_LP',
    ')': 'TK_RP',
    '[': 'TK_LB',
    ']': 'TK_RB',
    '.': 'TK_DOT',
    '..': 'TK_RANGE',
    ',': 'TK_COMMA',
    '^': 'TK_HAT',
    '@': 'TK_REF'
}


keywordToken = {
    'program': 'TK_PROGRAM',
    'integer': 'TK_INTEGER',
    'real': 'TK_REAL',
    'boolean': 'TK_BOOL',
    'char': 'TK_CHAR',
    'array': 'TK_ARRAY',
    'string': 'TK_STRING',
    'not': 'TK_NOT',
    'or': 'TK_OR',
    'xor': 'TK_XOR',
    'and': 'TK_AND',
    'begin': 'TK_BEGIN',
    'case': 'TK_CASE',
    'const': 'TK_CONST',
    'div': 'TK_DIV',
    'mod': 'TK_MOD',
    'do': 'TK_DO',
    'else': 'TK_ELSE',
    'end': 'TK_END',
    'for': 'TK_FOR',
    'function': 'TK_FUNCTION',
    'goto': 'TK_GOTO',
    'if': 'TK_IF',
    'label': 'TK_LABEL',
    'of': 'TK_OF',
    'procedure': 'TK_PROCEDURE',
    'record': 'TK_RECORD',
    'repeat': 'TK_REPEAT',
    'set': 'TK_SET',
    'then': 'TK_THEN',
    'to': 'TK_TO',
    'true': 'TK_BOOL',
    'false': 'TK_BOOL',
    'type': 'TK_TYPE',
    'until': 'TK_UNTIL',
    'var': 'TK_VAR',
    'while': 'TK_WHILE',
    'with': 'TK_WITH',
    'write': 'TK_WRITE',
    'writeln': 'TK_WRITELN',
}
